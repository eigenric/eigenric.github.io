<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ricardø Ruiz</title><link href="http://ricardoruiz.ml/" rel="alternate"></link><link href="http://ricardoruiz.ml/atom.xml" rel="self"></link><id>http://ricardoruiz.ml/</id><updated>2021-02-01T11:48:11+01:00</updated><entry><title>Hi Pelican</title><link href="http://ricardoruiz.ml/hi-pelican" rel="alternate"></link><published>2021-02-01T11:48:11+01:00</published><updated>2021-02-01T11:48:11+01:00</updated><author><name>Ricardo Ruiz Fernández de Alba</name></author><id>tag:ricardoruiz.ml,2021-02-01:/hi-pelican</id><summary type="html">&lt;p&gt;Nuevo blog gracias a &lt;a href="http://www.getpelican.com"&gt;Pelican&lt;/a&gt;, un sencillo
generador de sitios estáticos escrito en python. ¿Le echas un vistazo?&lt;/p&gt;
&lt;!-- readmore --&gt;

&lt;p&gt;En Pelican, los posts se pueden escribir con dos lenguajes de marcado
ligeros: &lt;a href="http://code.nabla.net/es/rest.html"&gt;ReStructuredText&lt;/a&gt; o
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; . Cada uno
ofrece un estilo distinto como se explica en este artíulo: &lt;a href="https://jasonstitt.com/markdown-vs-rst-pelican"&gt;Markdown vs
ReStructuredText&lt;/a&gt;. El …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nuevo blog gracias a &lt;a href="http://www.getpelican.com"&gt;Pelican&lt;/a&gt;, un sencillo
generador de sitios estáticos escrito en python. ¿Le echas un vistazo?&lt;/p&gt;
&lt;!-- readmore --&gt;

&lt;p&gt;En Pelican, los posts se pueden escribir con dos lenguajes de marcado
ligeros: &lt;a href="http://code.nabla.net/es/rest.html"&gt;ReStructuredText&lt;/a&gt; o
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; . Cada uno
ofrece un estilo distinto como se explica en este artíulo: &lt;a href="https://jasonstitt.com/markdown-vs-rst-pelican"&gt;Markdown vs
ReStructuredText&lt;/a&gt;. El diseño del
sitio se construye con ayuda del motor de plantillas Jinja2. Procedamos
a instalarlo.&lt;/p&gt;
&lt;h2&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Pelican está escrito en Python, por lo que para instalarlo basta con
usar pip. Para evitar problemas, podéis usar &lt;code&gt;pyenv&lt;/code&gt;, &lt;code&gt;virtualenv&lt;/code&gt;, o
&lt;code&gt;conda&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; activate blog
&lt;span class="gp gp-VirtualEnv"&gt;(blog)&lt;/span&gt; &lt;span class="gp"&gt;$ &lt;/span&gt;pip install pelican
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez instalado pelican, creamos un nuevo proyecto. El comando
&lt;code&gt;pelican-quickstart&lt;/code&gt; nos facilita el trabajo mediante un asistente que
nos pregunta por la configuración deseada (nombre del sitio, autor,
servidor ftp, etc.). Personalmente, yo activo el Makefile y el
Devserver.&lt;/p&gt;
&lt;p&gt;Escribamos pues nuestro primer post. Usaremos el lenguaje de marcado
&lt;code&gt;ReStructuredText&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;post.rst&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;Mi primer post&lt;/span&gt;
&lt;span class="gh"&gt;##############&lt;/span&gt;

&lt;span class="nc"&gt;:date:&lt;/span&gt; 2013-09-03 16:28
&lt;span class="nc"&gt;:slug:&lt;/span&gt; first-post
&lt;span class="nc"&gt;:category:&lt;/span&gt; python
&lt;span class="nc"&gt;:tags:&lt;/span&gt; blog, post, first, me, pelican

&lt;span class="gs"&gt;**ReStructuredText is awesome**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Después de guardarlo en &lt;code&gt;content&lt;/code&gt;, volvemos al directorio raíz y
ejecutamos las siguientes órdenes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;make html
&lt;span class="gp"&gt;$ &lt;/span&gt;make serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;make html&lt;/code&gt; genera los archivos en la carpeta &lt;code&gt;output&lt;/code&gt; y &lt;code&gt;make serve&lt;/code&gt;
inicia un pequeño servidor local en localhost:8000 para poder ver
nuestro sitio.&lt;/p&gt;
&lt;p&gt;Así es como tendrá que quedarnos&lt;/p&gt;
&lt;p&gt;&lt;img alt="Magnifica imagen de muestra" src="%7Cfilename%7C/images/screenshot.png" width="740px"&gt;&lt;/p&gt;
&lt;p&gt;Por defecto se utiliza el tema &lt;code&gt;notmyidea&lt;/code&gt;, pero puedes &lt;a href="http://pelicanthemes.com"&gt;descargar
otros&lt;/a&gt; o crear uno (más información en la
propia &lt;a href="http://docs.getpelican.com/en/stable/"&gt;Documentación de
Pelican&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Hasta aquí el pequeño tutorial de instalación. Un saludo!&lt;/p&gt;</content><category term="misc"></category><category term="python"></category><category term="pelican"></category><category term="static"></category><category term="blog"></category></entry><entry><title>Math is awesome</title><link href="http://ricardoruiz.ml/math-is-awesome" rel="alternate"></link><published>2021-02-01T11:37:16+01:00</published><updated>2021-02-01T11:37:16+01:00</updated><author><name>Ricardo Ruiz Fernández de Alba</name></author><id>tag:ricardoruiz.ml,2021-02-01:/math-is-awesome</id><summary type="html">&lt;p&gt;I really think mathematics is a beautiful branch of the kwnowledge. It's
not just useful but plenful of harmony. Why am I writing this?&lt;/p&gt;
&lt;p&gt;I think it's to prove my new math plugin. I have to create a new plugin
that uses &lt;code&gt;Katex&lt;/code&gt; rendering because it's faster. But, at the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I really think mathematics is a beautiful branch of the kwnowledge. It's
not just useful but plenful of harmony. Why am I writing this?&lt;/p&gt;
&lt;p&gt;I think it's to prove my new math plugin. I have to create a new plugin
that uses &lt;code&gt;Katex&lt;/code&gt; rendering because it's faster. But, at the moment, i'm
gonna use the mainstream &lt;code&gt;Mathjax&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, we can define the factorial thanks to the pi notation:&lt;/p&gt;
&lt;div class="math"&gt;$$\prod_{i=1}^n i = n!$$&lt;/div&gt;
&lt;p&gt;Isn't it the most beautiful equation you have seen in your entire life?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes, it is.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ejemplo de renderizado:&lt;/p&gt;
&lt;div class="math"&gt;$$f(x) = \int_{-\infty}^\infty \hat f(\xi)\,e^{2 \pi i \xi x}$$&lt;/div&gt;
&lt;p&gt;Y para probar un poquito...&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{1}{n} \sum_{i=1}^n x_i = \frac{x_1 + x_2 + \dots + x_n}{n}$$&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category></entry></feed>